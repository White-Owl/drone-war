   0  $accept : %entry% $end

   1  drone : program

   2  program :
   3          | program CR
   4          | program statement
   5          | program compaund_statement
   6          | program sub

   7  statements :
   8             | statements CR
   9             | statements statement
  10             | statements compaund_statement

  11  statement : ID EQUAL math_expr CR
  12            | EXIT DO CR
  13            | EXIT FOR CR
  14            | GOTO ID CR
  15            | ID COLON
  16            | CALL ID LPAREN parameters RPAREN CR
  17            | CALL SLEEP LPAREN math_expr RPAREN CR
  18            | CALL MOVE LPAREN math_expr RPAREN CR
  19            | CALL STOP LPAREN RPAREN CR
  20            | CALL SHOOT LPAREN math_expr COMMA math_expr RPAREN CR
  21            | ID EQUAL STARTSCAN LPAREN math_expr RPAREN CR
  22            | ID EQUAL NEXTSCAN LPAREN RPAREN CR
  23            | CALL CANCELSCAN LPAREN RPAREN CR
  24            | error CR

  25  compaund_statement : IF condition THEN statement
  26                     | IF condition THEN CR statements END IF
  27                     | IF condition THEN CR statements ELSE CR statements END IF
  28                     | DO WHILE condition CR statements LOOP
  29                     | DO statements LOOP WHILE condition
  30                     | DO UNTIL condition CR statements LOOP
  31                     | DO statements LOOP UNTIL condition
  32                     | FOR ID EQUAL math_expr TO math_expr CR statements NEXT
  33                     | FOR ID EQUAL math_expr TO math_expr STEP math_expr CR statements NEXT

  34  sub : SUB ID LPAREN args RPAREN CR statements END SUB CR
  35      | FUNCTION ID LPAREN args RPAREN CR statements END FUNCTION CR

  36  args :
  37       | ID
  38       | args COMMA ID

  39  parameters :
  40             | math_expr
  41             | parameters COMMA math_expr

  42  condition : logic_expr
  43            | logic_expr AND logic_expr
  44            | logic_expr OR logic_expr
  45            | NOT logic_expr
  46            | error

  47  logic_expr : BOOL
  48             | LPAREN logic_expr RPAREN
  49             | math_expr math_relation math_expr
  50             | SHOOT LPAREN math_expr COMMA math_expr RPAREN
  51             | ID ISFOE
  52             | ID ISALLY
  53             | ID ISWALL
  54             | ID ISEND

  55  math_relation : EQUAL
  56                | NOT_EQUAL
  57                | LESS
  58                | GREATER
  59                | LESS_EQUAL
  60                | GREATER_EQUAL

  61  math_expr : INT
  62            | ID LPAREN parameters RPAREN
  63            | ID
  64            | math_expr PLUS math_expr
  65            | math_expr MINUS math_expr
  66            | math_expr TIMES math_expr
  67            | math_expr DIVIDE math_expr
  68            | LPAREN math_expr RPAREN
  69            | RANDOM LPAREN math_expr COMMA math_expr RPAREN
  70            | HEALTH LPAREN RPAREN
  71            | ID DISTANCE
  72            | ID DIRECTION
  73            | error

  74  %entry% : '\001' drone

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . drone  (74)
	program : .  (2)

	.  reduce 2

	drone  goto 3
	program  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' drone .  (74)

	.  reduce 74


state 4
	drone : program .  (1)
	program : program . CR  (3)
	program : program . statement  (4)
	program : program . compaund_statement  (5)
	program : program . sub  (6)

	error  shift 5
	CR  shift 6
	IF  shift 7
	DO  shift 8
	EXIT  shift 9
	SUB  shift 10
	FUNCTION  shift 11
	CALL  shift 12
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	$end  reduce 1

	statement  goto 16
	compaund_statement  goto 17
	sub  goto 18


state 5
	statement : error . CR  (24)

	CR  shift 19
	.  error


state 6
	program : program CR .  (3)

	.  reduce 3


state 7
	compaund_statement : IF . condition THEN statement  (25)
	compaund_statement : IF . condition THEN CR statements END IF  (26)
	compaund_statement : IF . condition THEN CR statements ELSE CR statements END IF  (27)

	error  shift 20
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	NOT  shift 25
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	condition  goto 30
	logic_expr  goto 31


state 8
	compaund_statement : DO . WHILE condition CR statements LOOP  (28)
	compaund_statement : DO . statements LOOP WHILE condition  (29)
	compaund_statement : DO . UNTIL condition CR statements LOOP  (30)
	compaund_statement : DO . statements LOOP UNTIL condition  (31)
	statements : .  (7)

	WHILE  shift 32
	UNTIL  shift 33
	error  reduce 7
	CR  reduce 7
	IF  reduce 7
	DO  reduce 7
	LOOP  reduce 7
	EXIT  reduce 7
	CALL  reduce 7
	FOR  reduce 7
	GOTO  reduce 7
	ID  reduce 7

	statements  goto 34


state 9
	statement : EXIT . DO CR  (12)
	statement : EXIT . FOR CR  (13)

	DO  shift 35
	FOR  shift 36
	.  error


state 10
	sub : SUB . ID LPAREN args RPAREN CR statements END SUB CR  (34)

	ID  shift 37
	.  error


state 11
	sub : FUNCTION . ID LPAREN args RPAREN CR statements END FUNCTION CR  (35)

	ID  shift 38
	.  error


state 12
	statement : CALL . ID LPAREN parameters RPAREN CR  (16)
	statement : CALL . SLEEP LPAREN math_expr RPAREN CR  (17)
	statement : CALL . MOVE LPAREN math_expr RPAREN CR  (18)
	statement : CALL . STOP LPAREN RPAREN CR  (19)
	statement : CALL . SHOOT LPAREN math_expr COMMA math_expr RPAREN CR  (20)
	statement : CALL . CANCELSCAN LPAREN RPAREN CR  (23)

	ID  shift 39
	SLEEP  shift 40
	MOVE  shift 41
	STOP  shift 42
	SHOOT  shift 43
	CANCELSCAN  shift 44
	.  error


state 13
	compaund_statement : FOR . ID EQUAL math_expr TO math_expr CR statements NEXT  (32)
	compaund_statement : FOR . ID EQUAL math_expr TO math_expr STEP math_expr CR statements NEXT  (33)

	ID  shift 45
	.  error


state 14
	statement : GOTO . ID CR  (14)

	ID  shift 46
	.  error


state 15
	statement : ID . EQUAL math_expr CR  (11)
	statement : ID . COLON  (15)
	statement : ID . EQUAL STARTSCAN LPAREN math_expr RPAREN CR  (21)
	statement : ID . EQUAL NEXTSCAN LPAREN RPAREN CR  (22)

	COLON  shift 47
	EQUAL  shift 48
	.  error


state 16
	program : program statement .  (4)

	.  reduce 4


state 17
	program : program compaund_statement .  (5)

	.  reduce 5


state 18
	program : program sub .  (6)

	.  reduce 6


state 19
	statement : error CR .  (24)

	.  reduce 24


state 20
	condition : error .  (46)
	math_expr : error .  (73)

	$end  reduce 46
	error  reduce 46
	CR  reduce 46
	IF  reduce 46
	THEN  reduce 46
	ELSE  reduce 46
	DO  reduce 46
	LOOP  reduce 46
	EXIT  reduce 46
	SUB  reduce 46
	FUNCTION  reduce 46
	CALL  reduce 46
	END  reduce 46
	FOR  reduce 46
	NEXT  reduce 46
	GOTO  reduce 46
	ID  reduce 46
	PLUS  reduce 73
	MINUS  reduce 73
	TIMES  reduce 73
	DIVIDE  reduce 73
	EQUAL  reduce 73
	NOT_EQUAL  reduce 73
	LESS  reduce 73
	GREATER  reduce 73
	LESS_EQUAL  reduce 73
	GREATER_EQUAL  reduce 73


state 21
	logic_expr : BOOL .  (47)

	.  reduce 47


state 22
	logic_expr : ID . ISFOE  (51)
	logic_expr : ID . ISALLY  (52)
	logic_expr : ID . ISWALL  (53)
	logic_expr : ID . ISEND  (54)
	math_expr : ID . LPAREN parameters RPAREN  (62)
	math_expr : ID .  (63)
	math_expr : ID . DISTANCE  (71)
	math_expr : ID . DIRECTION  (72)

	LPAREN  shift 49
	ISEND  shift 50
	ISWALL  shift 51
	ISFOE  shift 52
	ISALLY  shift 53
	DISTANCE  shift 54
	DIRECTION  shift 55
	RPAREN  reduce 63
	PLUS  reduce 63
	MINUS  reduce 63
	TIMES  reduce 63
	DIVIDE  reduce 63
	EQUAL  reduce 63
	NOT_EQUAL  reduce 63
	LESS  reduce 63
	GREATER  reduce 63
	LESS_EQUAL  reduce 63
	GREATER_EQUAL  reduce 63


state 23
	math_expr : INT .  (61)

	.  reduce 61


state 24
	logic_expr : LPAREN . logic_expr RPAREN  (48)
	math_expr : LPAREN . math_expr RPAREN  (68)

	error  shift 56
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 57
	logic_expr  goto 58


state 25
	condition : NOT . logic_expr  (45)

	error  shift 56
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	logic_expr  goto 59


state 26
	logic_expr : SHOOT . LPAREN math_expr COMMA math_expr RPAREN  (50)

	LPAREN  shift 60
	.  error


state 27
	math_expr : RANDOM . LPAREN math_expr COMMA math_expr RPAREN  (69)

	LPAREN  shift 61
	.  error


state 28
	math_expr : HEALTH . LPAREN RPAREN  (70)

	LPAREN  shift 62
	.  error


state 29
	logic_expr : math_expr . math_relation math_expr  (49)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	EQUAL  shift 67
	NOT_EQUAL  shift 68
	LESS  shift 69
	GREATER  shift 70
	LESS_EQUAL  shift 71
	GREATER_EQUAL  shift 72
	.  error

	math_relation  goto 73


state 30
	compaund_statement : IF condition . THEN statement  (25)
	compaund_statement : IF condition . THEN CR statements END IF  (26)
	compaund_statement : IF condition . THEN CR statements ELSE CR statements END IF  (27)

	THEN  shift 74
	.  error


state 31
	condition : logic_expr .  (42)
	condition : logic_expr . AND logic_expr  (43)
	condition : logic_expr . OR logic_expr  (44)

	AND  shift 75
	OR  shift 76
	$end  reduce 42
	error  reduce 42
	CR  reduce 42
	IF  reduce 42
	THEN  reduce 42
	ELSE  reduce 42
	DO  reduce 42
	LOOP  reduce 42
	EXIT  reduce 42
	SUB  reduce 42
	FUNCTION  reduce 42
	CALL  reduce 42
	END  reduce 42
	FOR  reduce 42
	NEXT  reduce 42
	GOTO  reduce 42
	ID  reduce 42


state 32
	compaund_statement : DO WHILE . condition CR statements LOOP  (28)

	error  shift 20
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	NOT  shift 25
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	condition  goto 77
	logic_expr  goto 31


state 33
	compaund_statement : DO UNTIL . condition CR statements LOOP  (30)

	error  shift 20
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	NOT  shift 25
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	condition  goto 78
	logic_expr  goto 31


state 34
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : DO statements . LOOP WHILE condition  (29)
	compaund_statement : DO statements . LOOP UNTIL condition  (31)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	LOOP  shift 80
	EXIT  shift 9
	CALL  shift 12
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 35
	statement : EXIT DO . CR  (12)

	CR  shift 83
	.  error


state 36
	statement : EXIT FOR . CR  (13)

	CR  shift 84
	.  error


state 37
	sub : SUB ID . LPAREN args RPAREN CR statements END SUB CR  (34)

	LPAREN  shift 85
	.  error


state 38
	sub : FUNCTION ID . LPAREN args RPAREN CR statements END FUNCTION CR  (35)

	LPAREN  shift 86
	.  error


state 39
	statement : CALL ID . LPAREN parameters RPAREN CR  (16)

	LPAREN  shift 87
	.  error


state 40
	statement : CALL SLEEP . LPAREN math_expr RPAREN CR  (17)

	LPAREN  shift 88
	.  error


state 41
	statement : CALL MOVE . LPAREN math_expr RPAREN CR  (18)

	LPAREN  shift 89
	.  error


state 42
	statement : CALL STOP . LPAREN RPAREN CR  (19)

	LPAREN  shift 90
	.  error


state 43
	statement : CALL SHOOT . LPAREN math_expr COMMA math_expr RPAREN CR  (20)

	LPAREN  shift 91
	.  error


state 44
	statement : CALL CANCELSCAN . LPAREN RPAREN CR  (23)

	LPAREN  shift 92
	.  error


state 45
	compaund_statement : FOR ID . EQUAL math_expr TO math_expr CR statements NEXT  (32)
	compaund_statement : FOR ID . EQUAL math_expr TO math_expr STEP math_expr CR statements NEXT  (33)

	EQUAL  shift 93
	.  error


state 46
	statement : GOTO ID . CR  (14)

	CR  shift 94
	.  error


state 47
	statement : ID COLON .  (15)

	.  reduce 15


state 48
	statement : ID EQUAL . math_expr CR  (11)
	statement : ID EQUAL . STARTSCAN LPAREN math_expr RPAREN CR  (21)
	statement : ID EQUAL . NEXTSCAN LPAREN RPAREN CR  (22)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	STARTSCAN  shift 97
	NEXTSCAN  shift 98
	.  error

	math_expr  goto 99


state 49
	math_expr : ID LPAREN . parameters RPAREN  (62)
	parameters : .  (39)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	RPAREN  reduce 39
	COMMA  reduce 39

	math_expr  goto 100
	parameters  goto 101


state 50
	logic_expr : ID ISEND .  (54)

	.  reduce 54


state 51
	logic_expr : ID ISWALL .  (53)

	.  reduce 53


state 52
	logic_expr : ID ISFOE .  (51)

	.  reduce 51


state 53
	logic_expr : ID ISALLY .  (52)

	.  reduce 52


state 54
	math_expr : ID DISTANCE .  (71)

	.  reduce 71


state 55
	math_expr : ID DIRECTION .  (72)

	.  reduce 72


state 56
	math_expr : error .  (73)

	.  reduce 73


state 57
	logic_expr : math_expr . math_relation math_expr  (49)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)
	math_expr : LPAREN math_expr . RPAREN  (68)

	RPAREN  shift 102
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	EQUAL  shift 67
	NOT_EQUAL  shift 68
	LESS  shift 69
	GREATER  shift 70
	LESS_EQUAL  shift 71
	GREATER_EQUAL  shift 72
	.  error

	math_relation  goto 73


state 58
	logic_expr : LPAREN logic_expr . RPAREN  (48)

	RPAREN  shift 103
	.  error


state 59
	condition : NOT logic_expr .  (45)

	.  reduce 45


state 60
	logic_expr : SHOOT LPAREN . math_expr COMMA math_expr RPAREN  (50)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 104


state 61
	math_expr : RANDOM LPAREN . math_expr COMMA math_expr RPAREN  (69)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 105


state 62
	math_expr : HEALTH LPAREN . RPAREN  (70)

	RPAREN  shift 106
	.  error


state 63
	math_expr : math_expr PLUS . math_expr  (64)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 107


state 64
	math_expr : math_expr MINUS . math_expr  (65)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 108


state 65
	math_expr : math_expr TIMES . math_expr  (66)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 109


state 66
	math_expr : math_expr DIVIDE . math_expr  (67)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 110


state 67
	math_relation : EQUAL .  (55)

	.  reduce 55


state 68
	math_relation : NOT_EQUAL .  (56)

	.  reduce 56


state 69
	math_relation : LESS .  (57)

	.  reduce 57


state 70
	math_relation : GREATER .  (58)

	.  reduce 58


state 71
	math_relation : LESS_EQUAL .  (59)

	.  reduce 59


state 72
	math_relation : GREATER_EQUAL .  (60)

	.  reduce 60


state 73
	logic_expr : math_expr math_relation . math_expr  (49)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 111


state 74
	compaund_statement : IF condition THEN . statement  (25)
	compaund_statement : IF condition THEN . CR statements END IF  (26)
	compaund_statement : IF condition THEN . CR statements ELSE CR statements END IF  (27)

	error  shift 5
	CR  shift 112
	EXIT  shift 9
	CALL  shift 12
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 113


state 75
	condition : logic_expr AND . logic_expr  (43)

	error  shift 56
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	logic_expr  goto 114


state 76
	condition : logic_expr OR . logic_expr  (44)

	error  shift 56
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	logic_expr  goto 115


state 77
	compaund_statement : DO WHILE condition . CR statements LOOP  (28)

	CR  shift 116
	.  error


state 78
	compaund_statement : DO UNTIL condition . CR statements LOOP  (30)

	CR  shift 117
	.  error


state 79
	statements : statements CR .  (8)

	.  reduce 8


state 80
	compaund_statement : DO statements LOOP . WHILE condition  (29)
	compaund_statement : DO statements LOOP . UNTIL condition  (31)

	WHILE  shift 118
	UNTIL  shift 119
	.  error


state 81
	statements : statements statement .  (9)

	.  reduce 9


state 82
	statements : statements compaund_statement .  (10)

	.  reduce 10


state 83
	statement : EXIT DO CR .  (12)

	.  reduce 12


state 84
	statement : EXIT FOR CR .  (13)

	.  reduce 13


state 85
	sub : SUB ID LPAREN . args RPAREN CR statements END SUB CR  (34)
	args : .  (36)

	ID  shift 120
	RPAREN  reduce 36
	COMMA  reduce 36

	args  goto 121


state 86
	sub : FUNCTION ID LPAREN . args RPAREN CR statements END FUNCTION CR  (35)
	args : .  (36)

	ID  shift 120
	RPAREN  reduce 36
	COMMA  reduce 36

	args  goto 122


state 87
	statement : CALL ID LPAREN . parameters RPAREN CR  (16)
	parameters : .  (39)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	RPAREN  reduce 39
	COMMA  reduce 39

	math_expr  goto 100
	parameters  goto 123


state 88
	statement : CALL SLEEP LPAREN . math_expr RPAREN CR  (17)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 124


state 89
	statement : CALL MOVE LPAREN . math_expr RPAREN CR  (18)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 125


state 90
	statement : CALL STOP LPAREN . RPAREN CR  (19)

	RPAREN  shift 126
	.  error


state 91
	statement : CALL SHOOT LPAREN . math_expr COMMA math_expr RPAREN CR  (20)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 127


state 92
	statement : CALL CANCELSCAN LPAREN . RPAREN CR  (23)

	RPAREN  shift 128
	.  error


state 93
	compaund_statement : FOR ID EQUAL . math_expr TO math_expr CR statements NEXT  (32)
	compaund_statement : FOR ID EQUAL . math_expr TO math_expr STEP math_expr CR statements NEXT  (33)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 129


state 94
	statement : GOTO ID CR .  (14)

	.  reduce 14


state 95
	math_expr : ID . LPAREN parameters RPAREN  (62)
	math_expr : ID .  (63)
	math_expr : ID . DISTANCE  (71)
	math_expr : ID . DIRECTION  (72)

	LPAREN  shift 49
	DISTANCE  shift 54
	DIRECTION  shift 55
	$end  reduce 63
	error  reduce 63
	CR  reduce 63
	IF  reduce 63
	THEN  reduce 63
	ELSE  reduce 63
	DO  reduce 63
	LOOP  reduce 63
	EXIT  reduce 63
	SUB  reduce 63
	FUNCTION  reduce 63
	CALL  reduce 63
	END  reduce 63
	FOR  reduce 63
	TO  reduce 63
	STEP  reduce 63
	NEXT  reduce 63
	GOTO  reduce 63
	ID  reduce 63
	RPAREN  reduce 63
	COMMA  reduce 63
	PLUS  reduce 63
	MINUS  reduce 63
	TIMES  reduce 63
	DIVIDE  reduce 63
	EQUAL  reduce 63
	NOT_EQUAL  reduce 63
	LESS  reduce 63
	GREATER  reduce 63
	LESS_EQUAL  reduce 63
	GREATER_EQUAL  reduce 63
	AND  reduce 63
	OR  reduce 63


state 96
	math_expr : LPAREN . math_expr RPAREN  (68)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 130


state 97
	statement : ID EQUAL STARTSCAN . LPAREN math_expr RPAREN CR  (21)

	LPAREN  shift 131
	.  error


state 98
	statement : ID EQUAL NEXTSCAN . LPAREN RPAREN CR  (22)

	LPAREN  shift 132
	.  error


state 99
	statement : ID EQUAL math_expr . CR  (11)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	CR  shift 133
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 100
	parameters : math_expr .  (40)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	RPAREN  reduce 40
	COMMA  reduce 40


state 101
	parameters : parameters . COMMA math_expr  (41)
	math_expr : ID LPAREN parameters . RPAREN  (62)

	RPAREN  shift 134
	COMMA  shift 135
	.  error


state 102
	math_expr : LPAREN math_expr RPAREN .  (68)

	.  reduce 68


state 103
	logic_expr : LPAREN logic_expr RPAREN .  (48)

	.  reduce 48


state 104
	logic_expr : SHOOT LPAREN math_expr . COMMA math_expr RPAREN  (50)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	COMMA  shift 136
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 105
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)
	math_expr : RANDOM LPAREN math_expr . COMMA math_expr RPAREN  (69)

	COMMA  shift 137
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 106
	math_expr : HEALTH LPAREN RPAREN .  (70)

	.  reduce 70


state 107
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr PLUS math_expr .  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	TIMES  shift 65
	DIVIDE  shift 66
	$end  reduce 64
	error  reduce 64
	CR  reduce 64
	IF  reduce 64
	THEN  reduce 64
	ELSE  reduce 64
	DO  reduce 64
	LOOP  reduce 64
	EXIT  reduce 64
	SUB  reduce 64
	FUNCTION  reduce 64
	CALL  reduce 64
	END  reduce 64
	FOR  reduce 64
	TO  reduce 64
	STEP  reduce 64
	NEXT  reduce 64
	GOTO  reduce 64
	ID  reduce 64
	RPAREN  reduce 64
	COMMA  reduce 64
	PLUS  reduce 64
	MINUS  reduce 64
	EQUAL  reduce 64
	NOT_EQUAL  reduce 64
	LESS  reduce 64
	GREATER  reduce 64
	LESS_EQUAL  reduce 64
	GREATER_EQUAL  reduce 64
	AND  reduce 64
	OR  reduce 64


state 108
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr MINUS math_expr .  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	TIMES  shift 65
	DIVIDE  shift 66
	$end  reduce 65
	error  reduce 65
	CR  reduce 65
	IF  reduce 65
	THEN  reduce 65
	ELSE  reduce 65
	DO  reduce 65
	LOOP  reduce 65
	EXIT  reduce 65
	SUB  reduce 65
	FUNCTION  reduce 65
	CALL  reduce 65
	END  reduce 65
	FOR  reduce 65
	TO  reduce 65
	STEP  reduce 65
	NEXT  reduce 65
	GOTO  reduce 65
	ID  reduce 65
	RPAREN  reduce 65
	COMMA  reduce 65
	PLUS  reduce 65
	MINUS  reduce 65
	EQUAL  reduce 65
	NOT_EQUAL  reduce 65
	LESS  reduce 65
	GREATER  reduce 65
	LESS_EQUAL  reduce 65
	GREATER_EQUAL  reduce 65
	AND  reduce 65
	OR  reduce 65


state 109
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr TIMES math_expr .  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	.  reduce 66


state 110
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)
	math_expr : math_expr DIVIDE math_expr .  (67)

	.  reduce 67


state 111
	logic_expr : math_expr math_relation math_expr .  (49)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	$end  reduce 49
	error  reduce 49
	CR  reduce 49
	IF  reduce 49
	THEN  reduce 49
	ELSE  reduce 49
	DO  reduce 49
	LOOP  reduce 49
	EXIT  reduce 49
	SUB  reduce 49
	FUNCTION  reduce 49
	CALL  reduce 49
	END  reduce 49
	FOR  reduce 49
	NEXT  reduce 49
	GOTO  reduce 49
	ID  reduce 49
	RPAREN  reduce 49
	AND  reduce 49
	OR  reduce 49


state 112
	compaund_statement : IF condition THEN CR . statements END IF  (26)
	compaund_statement : IF condition THEN CR . statements ELSE CR statements END IF  (27)
	statements : .  (7)

	.  reduce 7

	statements  goto 138


state 113
	compaund_statement : IF condition THEN statement .  (25)

	.  reduce 25


state 114
	condition : logic_expr AND logic_expr .  (43)

	.  reduce 43


state 115
	condition : logic_expr OR logic_expr .  (44)

	.  reduce 44


state 116
	compaund_statement : DO WHILE condition CR . statements LOOP  (28)
	statements : .  (7)

	.  reduce 7

	statements  goto 139


state 117
	compaund_statement : DO UNTIL condition CR . statements LOOP  (30)
	statements : .  (7)

	.  reduce 7

	statements  goto 140


state 118
	compaund_statement : DO statements LOOP WHILE . condition  (29)

	error  shift 20
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	NOT  shift 25
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	condition  goto 141
	logic_expr  goto 31


state 119
	compaund_statement : DO statements LOOP UNTIL . condition  (31)

	error  shift 20
	BOOL  shift 21
	ID  shift 22
	INT  shift 23
	LPAREN  shift 24
	NOT  shift 25
	SHOOT  shift 26
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 29
	condition  goto 142
	logic_expr  goto 31


state 120
	args : ID .  (37)

	.  reduce 37


state 121
	sub : SUB ID LPAREN args . RPAREN CR statements END SUB CR  (34)
	args : args . COMMA ID  (38)

	RPAREN  shift 143
	COMMA  shift 144
	.  error


state 122
	sub : FUNCTION ID LPAREN args . RPAREN CR statements END FUNCTION CR  (35)
	args : args . COMMA ID  (38)

	RPAREN  shift 145
	COMMA  shift 144
	.  error


state 123
	statement : CALL ID LPAREN parameters . RPAREN CR  (16)
	parameters : parameters . COMMA math_expr  (41)

	RPAREN  shift 146
	COMMA  shift 135
	.  error


state 124
	statement : CALL SLEEP LPAREN math_expr . RPAREN CR  (17)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	RPAREN  shift 147
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 125
	statement : CALL MOVE LPAREN math_expr . RPAREN CR  (18)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	RPAREN  shift 148
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 126
	statement : CALL STOP LPAREN RPAREN . CR  (19)

	CR  shift 149
	.  error


state 127
	statement : CALL SHOOT LPAREN math_expr . COMMA math_expr RPAREN CR  (20)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	COMMA  shift 150
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 128
	statement : CALL CANCELSCAN LPAREN RPAREN . CR  (23)

	CR  shift 151
	.  error


state 129
	compaund_statement : FOR ID EQUAL math_expr . TO math_expr CR statements NEXT  (32)
	compaund_statement : FOR ID EQUAL math_expr . TO math_expr STEP math_expr CR statements NEXT  (33)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	TO  shift 152
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 130
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)
	math_expr : LPAREN math_expr . RPAREN  (68)

	RPAREN  shift 102
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 131
	statement : ID EQUAL STARTSCAN LPAREN . math_expr RPAREN CR  (21)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 153


state 132
	statement : ID EQUAL NEXTSCAN LPAREN . RPAREN CR  (22)

	RPAREN  shift 154
	.  error


state 133
	statement : ID EQUAL math_expr CR .  (11)

	.  reduce 11


state 134
	math_expr : ID LPAREN parameters RPAREN .  (62)

	.  reduce 62


state 135
	parameters : parameters COMMA . math_expr  (41)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 155


state 136
	logic_expr : SHOOT LPAREN math_expr COMMA . math_expr RPAREN  (50)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 156


state 137
	math_expr : RANDOM LPAREN math_expr COMMA . math_expr RPAREN  (69)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 157


state 138
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : IF condition THEN CR statements . END IF  (26)
	compaund_statement : IF condition THEN CR statements . ELSE CR statements END IF  (27)

	error  shift 5
	CR  shift 79
	IF  shift 7
	ELSE  shift 158
	DO  shift 8
	EXIT  shift 9
	CALL  shift 12
	END  shift 159
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 139
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : DO WHILE condition CR statements . LOOP  (28)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	LOOP  shift 160
	EXIT  shift 9
	CALL  shift 12
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 140
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : DO UNTIL condition CR statements . LOOP  (30)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	LOOP  shift 161
	EXIT  shift 9
	CALL  shift 12
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 141
	compaund_statement : DO statements LOOP WHILE condition .  (29)

	.  reduce 29


state 142
	compaund_statement : DO statements LOOP UNTIL condition .  (31)

	.  reduce 31


state 143
	sub : SUB ID LPAREN args RPAREN . CR statements END SUB CR  (34)

	CR  shift 162
	.  error


state 144
	args : args COMMA . ID  (38)

	ID  shift 163
	.  error


state 145
	sub : FUNCTION ID LPAREN args RPAREN . CR statements END FUNCTION CR  (35)

	CR  shift 164
	.  error


state 146
	statement : CALL ID LPAREN parameters RPAREN . CR  (16)

	CR  shift 165
	.  error


state 147
	statement : CALL SLEEP LPAREN math_expr RPAREN . CR  (17)

	CR  shift 166
	.  error


state 148
	statement : CALL MOVE LPAREN math_expr RPAREN . CR  (18)

	CR  shift 167
	.  error


state 149
	statement : CALL STOP LPAREN RPAREN CR .  (19)

	.  reduce 19


state 150
	statement : CALL SHOOT LPAREN math_expr COMMA . math_expr RPAREN CR  (20)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 168


state 151
	statement : CALL CANCELSCAN LPAREN RPAREN CR .  (23)

	.  reduce 23


state 152
	compaund_statement : FOR ID EQUAL math_expr TO . math_expr CR statements NEXT  (32)
	compaund_statement : FOR ID EQUAL math_expr TO . math_expr STEP math_expr CR statements NEXT  (33)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 169


state 153
	statement : ID EQUAL STARTSCAN LPAREN math_expr . RPAREN CR  (21)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	RPAREN  shift 170
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 154
	statement : ID EQUAL NEXTSCAN LPAREN RPAREN . CR  (22)

	CR  shift 171
	.  error


state 155
	parameters : parameters COMMA math_expr .  (41)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	RPAREN  reduce 41
	COMMA  reduce 41


state 156
	logic_expr : SHOOT LPAREN math_expr COMMA math_expr . RPAREN  (50)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	RPAREN  shift 172
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 157
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)
	math_expr : RANDOM LPAREN math_expr COMMA math_expr . RPAREN  (69)

	RPAREN  shift 173
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 158
	compaund_statement : IF condition THEN CR statements ELSE . CR statements END IF  (27)

	CR  shift 174
	.  error


state 159
	compaund_statement : IF condition THEN CR statements END . IF  (26)

	IF  shift 175
	.  error


state 160
	compaund_statement : DO WHILE condition CR statements LOOP .  (28)

	.  reduce 28


state 161
	compaund_statement : DO UNTIL condition CR statements LOOP .  (30)

	.  reduce 30


state 162
	sub : SUB ID LPAREN args RPAREN CR . statements END SUB CR  (34)
	statements : .  (7)

	.  reduce 7

	statements  goto 176


state 163
	args : args COMMA ID .  (38)

	.  reduce 38


state 164
	sub : FUNCTION ID LPAREN args RPAREN CR . statements END FUNCTION CR  (35)
	statements : .  (7)

	.  reduce 7

	statements  goto 177


state 165
	statement : CALL ID LPAREN parameters RPAREN CR .  (16)

	.  reduce 16


state 166
	statement : CALL SLEEP LPAREN math_expr RPAREN CR .  (17)

	.  reduce 17


state 167
	statement : CALL MOVE LPAREN math_expr RPAREN CR .  (18)

	.  reduce 18


state 168
	statement : CALL SHOOT LPAREN math_expr COMMA math_expr . RPAREN CR  (20)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	RPAREN  shift 178
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 169
	compaund_statement : FOR ID EQUAL math_expr TO math_expr . CR statements NEXT  (32)
	compaund_statement : FOR ID EQUAL math_expr TO math_expr . STEP math_expr CR statements NEXT  (33)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	CR  shift 179
	STEP  shift 180
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 170
	statement : ID EQUAL STARTSCAN LPAREN math_expr RPAREN . CR  (21)

	CR  shift 181
	.  error


state 171
	statement : ID EQUAL NEXTSCAN LPAREN RPAREN CR .  (22)

	.  reduce 22


state 172
	logic_expr : SHOOT LPAREN math_expr COMMA math_expr RPAREN .  (50)

	.  reduce 50


state 173
	math_expr : RANDOM LPAREN math_expr COMMA math_expr RPAREN .  (69)

	.  reduce 69


state 174
	compaund_statement : IF condition THEN CR statements ELSE CR . statements END IF  (27)
	statements : .  (7)

	.  reduce 7

	statements  goto 182


state 175
	compaund_statement : IF condition THEN CR statements END IF .  (26)

	.  reduce 26


state 176
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	sub : SUB ID LPAREN args RPAREN CR statements . END SUB CR  (34)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	EXIT  shift 9
	CALL  shift 12
	END  shift 183
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 177
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	sub : FUNCTION ID LPAREN args RPAREN CR statements . END FUNCTION CR  (35)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	EXIT  shift 9
	CALL  shift 12
	END  shift 184
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 178
	statement : CALL SHOOT LPAREN math_expr COMMA math_expr RPAREN . CR  (20)

	CR  shift 185
	.  error


state 179
	compaund_statement : FOR ID EQUAL math_expr TO math_expr CR . statements NEXT  (32)
	statements : .  (7)

	.  reduce 7

	statements  goto 186


state 180
	compaund_statement : FOR ID EQUAL math_expr TO math_expr STEP . math_expr CR statements NEXT  (33)

	error  shift 56
	ID  shift 95
	INT  shift 23
	LPAREN  shift 96
	RANDOM  shift 27
	HEALTH  shift 28
	.  error

	math_expr  goto 187


state 181
	statement : ID EQUAL STARTSCAN LPAREN math_expr RPAREN CR .  (21)

	.  reduce 21


state 182
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : IF condition THEN CR statements ELSE CR statements . END IF  (27)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	EXIT  shift 9
	CALL  shift 12
	END  shift 188
	FOR  shift 13
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 183
	sub : SUB ID LPAREN args RPAREN CR statements END . SUB CR  (34)

	SUB  shift 189
	.  error


state 184
	sub : FUNCTION ID LPAREN args RPAREN CR statements END . FUNCTION CR  (35)

	FUNCTION  shift 190
	.  error


state 185
	statement : CALL SHOOT LPAREN math_expr COMMA math_expr RPAREN CR .  (20)

	.  reduce 20


state 186
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : FOR ID EQUAL math_expr TO math_expr CR statements . NEXT  (32)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	EXIT  shift 9
	CALL  shift 12
	FOR  shift 13
	NEXT  shift 191
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 187
	compaund_statement : FOR ID EQUAL math_expr TO math_expr STEP math_expr . CR statements NEXT  (33)
	math_expr : math_expr . PLUS math_expr  (64)
	math_expr : math_expr . MINUS math_expr  (65)
	math_expr : math_expr . TIMES math_expr  (66)
	math_expr : math_expr . DIVIDE math_expr  (67)

	CR  shift 192
	PLUS  shift 63
	MINUS  shift 64
	TIMES  shift 65
	DIVIDE  shift 66
	.  error


state 188
	compaund_statement : IF condition THEN CR statements ELSE CR statements END . IF  (27)

	IF  shift 193
	.  error


state 189
	sub : SUB ID LPAREN args RPAREN CR statements END SUB . CR  (34)

	CR  shift 194
	.  error


state 190
	sub : FUNCTION ID LPAREN args RPAREN CR statements END FUNCTION . CR  (35)

	CR  shift 195
	.  error


state 191
	compaund_statement : FOR ID EQUAL math_expr TO math_expr CR statements NEXT .  (32)

	.  reduce 32


state 192
	compaund_statement : FOR ID EQUAL math_expr TO math_expr STEP math_expr CR . statements NEXT  (33)
	statements : .  (7)

	.  reduce 7

	statements  goto 196


state 193
	compaund_statement : IF condition THEN CR statements ELSE CR statements END IF .  (27)

	.  reduce 27


state 194
	sub : SUB ID LPAREN args RPAREN CR statements END SUB CR .  (34)

	.  reduce 34


state 195
	sub : FUNCTION ID LPAREN args RPAREN CR statements END FUNCTION CR .  (35)

	.  reduce 35


state 196
	statements : statements . CR  (8)
	statements : statements . statement  (9)
	statements : statements . compaund_statement  (10)
	compaund_statement : FOR ID EQUAL math_expr TO math_expr STEP math_expr CR statements . NEXT  (33)

	error  shift 5
	CR  shift 79
	IF  shift 7
	DO  shift 8
	EXIT  shift 9
	CALL  shift 12
	FOR  shift 13
	NEXT  shift 197
	GOTO  shift 14
	ID  shift 15
	.  error

	statement  goto 81
	compaund_statement  goto 82


state 197
	compaund_statement : FOR ID EQUAL math_expr TO math_expr STEP math_expr CR statements NEXT .  (33)

	.  reduce 33


57 terminals, 14 nonterminals
75 grammar rules, 198 states
